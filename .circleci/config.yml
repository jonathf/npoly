version-tags: &version-tags
    tags:
        only: /v\d+\.\d+\.\d+(-(alpha|beta|rc|dev|post)\d+)?/

version: 2.1
executors:
    my-executor:
        docker:
            - image: circleci/python:3.7.3
        working_directory: /home/circleci/project

jobs:
    test-py27:
        docker:
            - image: circleci/python:2.7.16
        steps:
            - checkout
            - run:
                name: "Installation"
                command: |
                    pip install --user . sympy pytest
            - run:
                name: "Run tests"
                command: |
                    ~/.local/bin/pytest --doctest-modules numpoly test
    build-cache:
        executor: my-executor
        steps:
            - checkout
            - restore_cache:
                keys:
                    - deps-{{ checksum "poetry.lock"}}
                    - deps-
            - run:
                name: "Installation"
                command: |
                    python3 -m venv /home/circleci/venv
                    source /home/circleci/venv/bin/activate
                    pip install poetry==1.0.5
                    poetry install
            - save_cache:
                key: deps-{{ checksum "poetry.lock"}}
                paths:
                    - /home/circleci/venv
            - persist_to_workspace:
                paths:
                    - project
                    - venv
                root: /home/circleci
    test:
        executor: my-executor
        steps:
            - attach_workspace:
                at: /home/circleci
            - run:
                name: "Run tests"
                command: |
                    source /home/circleci/venv/bin/activate
                    pytest --doctest-modules --cov=numpoly numpoly test doc/*.rst README.rst
                    codecov
    linting:
        executor: my-executor
        steps:
            - attach_workspace:
                at: /home/circleci
            - run:
                name: "Run pylint"
                command: |
                    source /home/circleci/venv/bin/activate
                    pylint --rcfile=.pylintrc -E numpoly
            - run:
                name: "Run pydocstyle"
                command: |
                    source /home/circleci/venv/bin/activate
                    pydocstyle numpoly
    sphinx:
        executor: my-executor
        steps:
            - attach_workspace:
                at: /home/circleci
            - run:
                name: "Run Sphinx build"
                command: |
                    source /home/circleci/venv/bin/activate
                    sphinx-build doc/ doc/.build -b html -n -v --color -T -W --keep-going
    deploy:
        executor: my-executor
        steps:
            - attach_workspace:
                at: /home/circleci
            - run:
                name: "Verify tag version"
                command: |
                    PROJECT_TAG=$(cat pyproject.toml \
                        | grep 'version\s*=' \
                        | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+\(-[a-z0-9]\+\)\{0,1\}')
                    echo "$CIRCLE_TAG == v$PROJECT_TAG"
                    test "$CIRCLE_TAG" = "v$PROJECT_TAG"
            - run:
                name: "Publish to PyPI"
                command: |
                    source /home/circleci/venv/bin/activate
                    poetry publish --build -u jonathf -p $PYPI_PASSWORD -n

workflows:
    version: 2.1
    workflow:
        jobs:
            - test-py27:
                filters:
                    <<: *version-tags
            - build-cache:
                filters:
                    <<: *version-tags
            - test:
                filters:
                    <<: *version-tags
                requires:
                    - build-cache
            - linting:
                filters:
                    <<: *version-tags
                requires:
                    - build-cache
            - sphinx:
                filters:
                    <<: *version-tags
                requires:
                    - build-cache
            - deploy:
                requires:
                    - test-py27
                    - test
                    - linting
                    - sphinx
                filters:
                    <<: *version-tags
                    branches:
                        ignore: /.*/
